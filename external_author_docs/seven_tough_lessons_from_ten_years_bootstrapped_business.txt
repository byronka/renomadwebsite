Seven tough lessons from ten years in bootstrapped business
Posted: December 1, 2018 | Author: abalashov | Filed under: Business, Life, Tech |14 Comments
When I entered the self-employment world at barely the age of 22, I had only three and a half years of industry experience, albeit in half a dozen job roles. Owing to my academic and Soviet sociocultural roots, I also had vanishingly little received social knowledge of business. Commerce was not a family tradition.

At present, my business retains a mixture of product and consulting revenue, though with a renewed focus on product following a few tumultuous years. It is what one might call a “moderately successful” business; it’s still around ten years later, and it makes a respectable, if hardly ostentatious, living for its owner, but it has not significantly grown beyond that.

Thus, in such ambivalent circumstances, the tenth anniversary of the company’s humble start as a bootstrapped concern passed largely without remark at the beginning of this year. Nevertheless, I’ve had an ample opportunity to ponder the most important things I’ve learned along the way.

There’s a school of thought out there that says speaking with candour about mixed results or outright failures, or in any way admitting or owning liabilities, is bad for marketing and bad for the business’s image. You know, it is. 99% of business-related messaging out there consists of “success porn” and proclamations of victory. No businessperson on their right mind would stray from the safety of those clichés; the image of success sells, the same way a $3000 suit and a rented Ferrari sells.

I’m out to help promote a new, brutally honest way of writing about life in the trenches. I think the social utility of publicly discussing the realities of entrepreneurship outweighs the risks. If an owner-founder out there reads this and realises they’re not alone in the obstacles they slog through as a one-man band, the magnitude of my happiness will be greater than the magnitude of my worry that someone, somewhere might think I suck at life. In short, I’m not going to take part in “success porn”; my anecdotes may paint a less rosy picture, but I’m candid about the lessons that I really did learn, and I own my many mistakes. I value reality and substance over figments of marketing imagination or self-congratulatory treacle. If you do too, that should give you some confidence in doing business with my company. So I hope.

One last thing: this article is implicitly about bootstrapping a small “information age” business from nothing, or at most a small investment of personal capital. A distinguishing trait of “information age” businesses of this sort is that the primary capital is human and the startup cost is, in principle, quite low. What I say is unlikely to apply to businesses requiring significant investments of COGS (Cost of Goods Sold) or machinery.

I started out suddenly, with $200 to my name, no revenue, no customers and no business model, and having just blown my meagre savings on a down payment for a condo. Result: two mortgages and a car payment were due the next week.

Wiser people would have avoided that kind of extreme (more on that below), but this is nevertheless possible in the business models I’ve got in mind. I suppose lesson #0 is: don’t start a business like that. If I were doing it over again, I would certainly live cheaply, save money, and capitalise the business with at least a year’s worth of runway.

If you have funding or are starting from a position of nontrivial wealth, or want to open a restaurant, a shoe store, or for that matter a backyard medical devices factory or an oil drilling rig, you might as well skip this article, as your economics and constraints are going to be entirely different.

With all that in mind, here are some other things I’d travel back in time to tell my younger self—if he’d listen, which is far from assured:

1. Consulting is not a scalable business model or a good funding strategy
As mentioned above, I unexpectedly found myself jobless, with no cash, and had two mortgages and a car payment. That means the initial conditions of my business were: do whatever generates cash ASAP. In tech, that naturally pushes one into consulting. Of all the things one can possibly do, service work pays the quickest.

Clearly, I managed and paid the bills. To those who are not so lucky in their ventures, that might seem like success. The reality is more complicated.

To make an adequate living as a consultant, you have to be rather good at many things and possess specialised skills and knowledge. Proffering relatively generic IT skills won’t work; at that point, you’ll be competing with volume operations who have made a process of this, and with offshore techies on oDesk with whom you cannot compete on price and make a “First World” living. So, for purposes of this discussion, let’s assume you have some unique knowledge of the ways and means of a particular industry, are particularly talented, and possess both wide general knowledge and deeply detailed specialisation in a few valuable areas.

This seems like a blessing, but for anyone trying to build a business bigger than themselves, it’s a curse because it’s not a business model. It’s a glorified job for yourself, with all the downsides of a salary but none of the upsides, including the “steady paycheck” bit.

First, well-paid tech consultants are paid for the fact that the intersection of many different technical skill sets is present in a single person, likely coupled with some niche domain knowledge of a particular industry. It’s near-impossible to hire anyone who is not of an identical profile to help you with that and grow the business beyond yourself. There are only so many hours in the day, and only so many hours you can bill. That is the limit of your business model and your compensation.

Even if you are somehow able to afford to pay a competitive market salary (I wasn’t), the likelihood of finding someone with the mixture of skills you need is very low, and this becomes exponentially more true as you get into rarefied niches. In IP telephony, for example, hiring most IT people off the street is of limited value; in all cases, you’re going to have to educate and train someone in the folk knowledge you use to ply the trade. That can take months, or even years, during which time you’re burning scarce cash and cannibalising your own (ostensibly billable) time.

Another peculiarity of niche consulting work is that you may have to pay these folk quite a lot, as their salaries need to be competitive with what they could otherwise command elsewhere in the market with their legitimately valuable skills. That’s a hard pill to swallow if they don’t have the specific skills you need.

As you move down the talent ladder and toward entry-level people, you can only find people who are kind of okay at one or two of the eight or nine things you need them to know well. In the best possible case, it’s going to be you and some help that will, for the value you are able to extract out of it, be suffocatingly expensive no matter what it costs, and you will spend months or even years trying to groom it. Needless to say, the help can leave any time for greener pastures where its existing skills fetch a higher return.

The second problem with consulting is that it’s custom work. The market has a seemingly bottomless appetite for custom work, but you don’t own it, and it leaves you with no residual intellectual property or, in a broader sense, capital. Yes, charging a lot can compensate for that to some extent, but there’s only so much you can bill. In that sense, it’s a profoundly linear business, no different to a barber shop. Want to make twice as much money? You’ll need to cut twice as much hair. Except you can find afford to hire people to work at a barber shop, in principle.

Yes, there are ways to optimise the process. Most consultants eventually find ways to package what they do, through some sort of reusable assets, to lower the marginal cost of doing it. In some cases, if you’re lucky, you can even get customers to fund part of the research and development cost of a product indirectly. A lot of products’ origin story lies in consulting in that sense; indeed, so does mine.

All businesses with a headcount greater than one have something in common: a real business model requires devising easily replicable workflows and business processes at decreasing marginal cost. 

If consulting in particular is your thing, there are clearly ways to scale out the business of consulting, and indeed, any other service business, as demonstrated by the existence of the professional services majors – KPMG, Deloitte, Boston, and others. But all of these businesses have solved the problem of the replicable business model. At the professional services majors, they’ve figured out how to write a three-ring binder of procedures—so to speak—that a fresh-faced Comparative Literature graduate six weeks out of school can follow just well enough without accruing years of deep expertise in a particular industry vertical. That procedure is then carried out for every Fortune 500 client that requests the services of an “Audit Associate II”. That’s still a business model, but it doesn’t work at a small scale.

That’s why I said above that being in a position to sell specialised work that one does individually is a curse, not a blessing, because it gets one out of having to solve the intellectual problem of how to build that business model. A much more enviable position is that of entrepreneurs who do not have the skills to do most of the work required to build their business themselves: it forces them to solve for how to combine labour and capital in a way that works. From day one, they have to devise a workflow and a process into which they can plug other people—other people they have to somehow afford—with the idea that more people can be added in the same way. Consulting is, entrepreneurially speaking, the laziest possible option; it pays now, but it doesn’t generalise the process of how to get paid repeatably.

Consulting is often seen as a means to an end, a short-term funding strategy until we can get the product off the ground. The idea is to do consulting at the same time as developing and marketing a product until it becomes self-sustaining. There are indeed thriving businesses and products that have got started this way, though it usually requires that the consulting be at least somewhat complementary to the larger goal.

Still, an incredible landscape of obstacles is arrayed against you in this paradigm: consulting has a way of taking up 85% of your time for 40% of the revenue. In my experience, it takes nothing less than a supernatural Teutonic discipline to properly compartmentalise consulting, and even then, by the very nature of the sort of thing that it is, it has a way of spilling outside whatever neat boxes you try to shove it into. Consulting customers are demanding and have a habit of calling.

Another widespread belief is that one can do consulting intensively for a while to build up cash reserves, then operate off that runway and focus on your real mission. This might be arithmetically possible if you’ve dialed down your personal burn rate to exceptionally low, but, if you find a way to make lucrative consulting projects arise spontaneously, exactly when you need them, and disappear precisely when you don’t, with no effort required on your part to get them, please let me know. I’ll make sure you get that Nobel Prize. In the meantime, consulting happens based on the customers’ needs, not yours, and the networking, marketing and engagement required to maintain a pipeline and get any consulting project at all will easily suck up the rest of your time.

Useless workFor all these kinds of reasons, the result is that your product development proceeds at a glacial pace, or falls by the wayside entirely, because much of your energy is spent hustling for consulting dollars. Relative to the windows of market opportunity in tech, that can be disastrous. Plus, you are likely competing with companies who are not hindered by such ballast, and can afford to focus on product 100%. This might all be surmountable if you can muster the total dedication and raw 24/7 energy of an unattached 23 year-old singleton, and have—somewhat improbably—jettisoned any expectation of a personal life, hobbies or outside interests. However,  it is essentially impossible if you have a family or other constraints that box you into a more or less 9-to-5 regime. At that point, you’re an advertising copywriter dreaming of writing the next Great American Novel. Any day now.

Critically, the friction and complexity of doing niche custom work also makes it complex and frictional to sell, particularly for someone who is not you. Sales cycles for this sort of thing are long and involve patiently nurturing consultative sales relationships which underscore you as an industry expert in the eyes of the prospect. As with business processes for employees, sales needs to traffic in simple, easy-to-understand concepts with as few moving parts as possible. It is hard to package custom work and niche expertise in a form consumable by otherwise capable and motivated salespeople. This problem can also afflict “consultingware” software products; at the very least, products which are complicated to sell require extensive sales training, driving up customer acquisition costs and prices accordingly, and limiting your ability to scale that process out.

Lastly, even if you are not in a business model that specifically contemplates a dichotomy between “consulting” and “software product”, many other models have parallels. For instance, in the IP telephony service provider world, there is a similar choice between building high-expertise, custom deployments versus prefabricated IP PBXs and trunks. Some people I know clear very respectable revenue doing the former and pride themselves in their resistance to the commoditising forces of the latter, but there are serious volume—and therefore, revenue—limits around their business model.

2. Good cash flow is more important than revenue
For my first years in business, I did only project-based consulting work and had neither a product nor significant recurring revenue otherwise. That meant I’d sometimes go more than a month without getting paid. This is the period in which I most substantially wrecked my credit and paid personal bills notoriously late, the consequences of which remain with me now.

Bad cash flow at higher revenue is worse than good cash flow at lower revenue. In fact, bad cash flow can sink even a notionally profitable and viable business. This is a well-known fact in economics, but the usual countermeasures are rarely available at an individual scale.

It is only human to suppose that if one earns a $100k (for example), one can afford a commensurate lifestyle. The trouble with that in consulting, for instance, is that a high percentage of that income is volatile (unsteady). If someone divided that $100k by 12 and gave you 1/12th on the first day of every month, you’d be set, but that’s just not how it works; if that’s what you’re after, get a salaried job.

The devil is all in the details of what you have liquid at any given moment. It is likely to be the case that $100k of unsteady income can only support a $35k lifestyle once appropriately discounted for volatility. The same logic can be applied to business expenses, and is something to think about before you commit to cutting someone a paycheck on the 1st and 15th.

Make adjustments accordingly. I didn’t; by the time I was spirited out of my last job, I had managed to buy the aforementioned condo and otherwise acquire a lifestyle that required a middle-class professional income to sustain, and have generally persisted in maintaining a relatively high personal expense base.

That’s going to create a dynamic that is substantially similar to the one poor people go through because you’re nearly always broke, only with the added irony that, on paper, you might earn a pretty sizable income. Even if that’s the case, being high-income with high expenses is about the same as being low-income. Your decisions and priorities will resemble those of low-income people. Any zeroes in your checking account will represent only a fleeting blip of happiness before they go right back out. Sizable income does nothing for you when it arrives in episodic, unpredictable chunks. You may have money once that payment clears tomorrow, but that does nothing to help you here, now, today. I can’t count how many times that has literally been true.

In principle, one can meticulously set aside cash from high points into a rainy day fund to offset the low points, but the messy timing of reality probably won’t fit whatever  savings scheme you’ve devised. The only real way to get ahead of this is to have an expense base that is vastly below your income.

In addition to deteriorating one’s ever-important personal financial history, the constant stress of poor cash flow is a major distraction from your business, and therefore an existential threat. Don’t do what I did; live cheaply and bide your time. Don’t mortgage your financial future with shortcuts.

3. Everything takes a lot longer and is harder than you think
My company’s product would be morally offensive to a young developer at first glance. It took seven years to write what is, in the grand scheme, a few thousand lines of code? Bro, I could do that in like, a weekend.

Developers are famous for grossly underestimating how long it takes to just, you know, write the code real quick. That’s not a new revelation. The real revelation is in what else you have to do to take it to market.

Overlooking the fact that the product was developed alongside consulting, with all the problems that entails as per point #1, I’d say maybe 15% of the work that has gone into this product had anything to do with writing code, and indeed, that’s not where most of the value lies.

Prototyping something is fairly easy for many minimally viable iterations of product. The real work, the dark matter of the entrepreneurial universe, is in what is sometimes called “customer development”; deploying it in the real world, painstakingly learning what works and what doesn’t, incorporating that market feedback and iterating it. Then there’s the troubleshooting of bugs and fixing of problems which only arise in production and at large scales (and therefore under the pressure of irate customers who must be placated). For enterprise-oriented software like ours, customers expect a streamlined vendor support relationship with well-considered processes. Polishing aspects of customer experience which are unrelated in any overt way to your product is a critical part of selling any product with a service and support dimension—that is, most software for enterprises and service providers.

If you multiply that out across punishingly long sales and adoption cycles which can range from months to, in many cases, years, it’s not so hard to see how it can, for an army of more or less one, take seven years to breed good product stock. Although this is not true of some products for the mass market, it is absolutely true for intra-industrial solutions with numerous moving parts.

For software development work and other intense focus-based tasks, there are also the simple economics of human task-switching. Joel Spolsky and others exposed aspects of this argument to a larger audience some time ago, but it boils down to this: development has a huge cognitive load. While Joel et al focused mainly on the ways developer focus can be derailed by distractions, development is also exceptionally sensitive to mental fatigue and to the vicissitudes of motivation — problems you’re going to struggle with if you’re juggling consulting gigs alongside product development work. “Programmer’s block” is a thing, and I’ve learned that fighting it with brute force and will power alone simply leads to burn-out.

Moreover, we’re simply not robots; one does not simply do consulting from 9 AM to 1 PM, then switch one’s mind to product coding at 1:01 PM and carry on until 5 PM. The mind needs time to unwind, recharge, adapt, and get in gear. As many of my fellow developers know, often by the time that happens, 5 PM rolls around. This is, incidentally, why developers chafe at being scheduled for meetings in the middle of the day or being burdened with errands spliced into the middle of work; the mental focus required for coding requires fairly long, unbounded chunks of time to conjure—a process not altogether reliable even in those cases. A midday meeting or a dental appointment can split your day into two useless chunks in which you can’t do anything useful.

Naive is the person who thinks software developers in large companies work on code anywhere near eight hours per day. Perhaps I am exceptionally feeble, but I don’t think the human brain can sustain that for any significant length of time. Occasional heroics are of course possible, but in general, I’d say 2 to 3 hours of solid coding per day is a banner day for a developer in the enterprise. The rest of the time is taken up with e-mail, meetings, conference calls, lunch breaks, updating internal tickets and bug reports, and just vacantly scrolling through the code, trying to summon the elusive “zone”.

If “knowledge work” were brainless piecework, it wouldn’t pay much. It’s got a lot of parasitic drag in the brain. Factor all that into your estimation of how long things really take and the resource commitments they will require.

4. Figure out what actually motivates you
Succeeding at business is quite hard, actually. If it were easy, everyone would do it. To even stand a fighting chance, you need to figure out how to keep yourself plugging away at it in a sustainable and enduring way. In my experience, generating real drive within yourself comes down to a bit of willful sleight of hand, some mental tomfoolery to trick yourself into doing work even when you don’t really want to.

I think the official party line among the self-employed is that money is supposed to be the motivation. To some extent, it surely is. To be sure, everyone wants to have enough money to solve most problems in their life and have the things, experiences and security they want, and everyone’s sense of justice is offended when they receive less of it than they believe they should. My observations suggest, however, that money is seldom the root of most drive on a long-term basis. The idealised economic free agent (“Economic Man”) is more myth than reality.

At any rate, if money were my sole motivation, I’d take the path of least resistance and find a salaried job; I’d probably make more by this point in my career, it’d be steady pay, I’d have benefits, and best of all, a narrow area of responsibility rather than direct exposure to everyday business risk. If I had stuck to the corporate career track, I’m almost certain I’d have a positive net worth and some trappings of middle-class wealth accumulation, instead of being six figures under.

When I speak of motivation, I’m not referring to sanguine or idealistic conceptions of motivation, nor grand, cosmological ideas. Many people are tempted, upon first examination, to answer this question in terms of how they want to see themselves. Some will say they want to make the world a better place. Some will say it’s all for the money so they can cash out and do what they really want. Some will say it’s all for their children, their sick brother, baby sister, destitute grandmother.

That may all be true, but it probably isn’t what motivates them in a local, everyday sense. I’m referring to the stuff that makes the work itself enticing. There are probably preternaturally disciplined people out there who are animated into everyday action by the notion of executing a long-term goal, but unless you’re one of these Terminators, you need to do some blunt and honest introspection to figure out what makes you tick.

To answer that question for myself, I have to go back to my childhood and adolescence. I started programming at age 9, and from that age until I started working, I put what I reasonably estimate to be somewhere between 8,000 and 10,000 hours into it. If you crunch the arithmetic on that, that means I wrote code almost every day, and to a degree that surely crowded out most normal teenage activities and developmental experiences, including a healthy social life. That level of dedication was certainly not sustained by a singular long-term goal that lasted from primary school through adulthood. Indeed, I had no intention of making a tech career, and entered the University of Georgia as a political science major, later switching to philosophy and entertaining vague aspirations of law school.

I spent much of that time working on multi-user chat servers called talkers, originally a UK-centric phenomenon, with a group of like-minded peers and associated social cohort of people who simply used talkers, called “spods” (verbed, “spodding”). I count some of them among my real-life friends today, but they were all online then. My programming peers were mostly a bit older, and played an important mentoring role. We frequently competed and co-opeted to over-engineer our home-brew talkers for high performance and concurrency, since we needed to support … tens of users.

Making the computer do stuff was quite interesting, but there’s no way a solipsistic interaction with the machine would have sustained my interest to this level. This was, in effect, my primary social life at the time. It was the social dimension that interested me; the collaboration, the teamwork, the feeling of watching users actually use — and enjoy — my inventions. I relished learning processes and workflows (e.g. version control) and “how things are done” as much as doing them. The journey was as important as the destination. The qualitative, human aspect of how people worked interested me. And of course, ego certainly played a big role. As my skills sharpened, my status and acknowledged expertise increased in that social group, and as I got older and demonstrated increasing maturity (in relative terms, anyway), I came to have legitimacy and respectability in that community.

From the perspective of someone self-employed since a rather young age, what I miss most is about conventional employment is certainly the teamwork and camaraderie, the feeling of contributing distinctive expertise to an endeavour larger than myself. Self-employment is a mostly solipsistic endeavour for me; my economic incentives point to spending as much time one-on-one with the machine as possible. That’s not easy to sustain for a fairly sociable person.

By and large, nobody cares what I do. I don’t really have direct colleagues or peers around due to my narrow specialisation. Certainly, customers recognise my expertise and even pay me for my work from time to time, and in capitalist society, one might say that this is the highest expression of caring about something. But I’m paid for a bottom-line result, and few people appreciate the intricacies of how I arrived at it. The resulting creative and intellectual control is liberating in one sense, but constricting in another. I have few intermediate responsibilities apart from the all-important delivering.

I’ve tried various coping strategies, such as co-working spaces (which I have written about). But I had little to say to the web economy SEO Superstars, Sales Quarterbacks and Vision Catalysts who tend to inhabit such places, and they had little to say to me. Oddly enough, this is where entry-level employees whose direct economic contributions were otherwise quite limited helped me a lot. I had people I could bounce ideas off of and show things to who also had some folkloric knowledge of our business and could put what I showed them in the right kind of context. I suppose I’m a bit like Dr. House (minus the “genius” bit); I work unsteadily in isolation and need the dynamic of a “team”. There are other people I know who seem more genuinely introverted, and really relish working at home and not having to deal with “people”. I don’t understand them and they don’t understand me, but the differences seem genuine.

Little cute caucasian girl in jacket and hat sitting alone on a seesaw swing at a playground outdoors. Loneliness mood conceptI don’t think I’m the first to say that doing small business is lonely. Much has been written by other entrepreneurs about how it can even be quite isolating even within a lively social and family life, as nobody really understands. I am not given to pity parties, but psychologically, this has posed challenges. I don’t have a good solution for my case; indeed, not all problems have solutions. Nor am I sure how I could have gone about my self-employment differently without radically altering its nature, apart from perhaps soliciting more on-site engagements. What I do know is that the solipsism of “moderately successful” small business is something the 22 year-old me failed to anticipate or consider, which I think is par for the course for 22 year-olds.

All this to say: it’s not overly self-indulgent to do some honest introspection. If you can more or less accurately deduce what really makes you tick and can find a way to cater to that in your business decisions, the returns to sustained productivity will not disappoint. While all economically useful work involves tedious drudgery, I know some people who have found their own answer to this problem and managed to solve for it, and they really do seem thrilled and energised to go to the office every day, as best as I can tell.

5. Don’t neglect proper tax planning
I have sizable delinquent tax debt that I am still in the process of resolving, and of course, the painfully injurious arithmetic of compound interest and penalties fully applies.

In my undoubtedly tendentious estimate, that’s about 30% failure to pay taxes in the aforementioned context of poor (though steadily improving!) cash flow, but 70% poor tax planning and tax-related decisions. Just by way of merely one example: I have an LLC and did not do an S-Corp tax treatment election until FY 2017. This means that for every prior year, I was assessed 15.3% self-employment tax on top-line net business income prior to personal deductions, and indeed, this represents a slight majority of my tax debt. That is to say, my taxable income for tax purposes is significantly lower than my taxable income for self-employment tax purposes. That’s tax debt I wouldn’t have if I structured my compensation differently.

Worse yet, it’s not that I didn’t know the consequences. I was just too busy trundling along with my business to attend to these things diligently.

One of the worst things about bootstrapping is that you’re always living check-to-check, leaving little time or energy for “stepping back” and thinking “deep strategic thoughts”. The strategy is “make money, pay bills”. This is also why most business advice rings hollow in this world; it’s a luxury one cannot afford.

Set aside the time to research and fully understand, with the help of a CPA and perhaps an attorney, every implication of a given business entity/incorporation structure. Don’t be like me; get ahead of it before it’s too late.

6. Lay off the success porn
By now, much has been written about research findings that social media use gives rise to depression and anxiety. This is largely explained by the fact that people selectively curate the portions of their lives they put online, leading to the impression that everyone else’s life is amazing and full of neverending vacations and rich, vibrant experiences, and you alone are struggling with the drudgery of everyday life.

This is doubly true in business, where the relentless bombardment of announcements related to other people’s success never abates. LinkedIn serves a similar function for the business-minded as Facebook and Instagram does for ordinary people. Few economic struggles or bankruptcies are proclaimed on LinkedIn, except perhaps in the “started from the bottom, now we’re here” epics that salespeople, business coaches and “self-help gurus” seem to love to write.

My earlier years invited frequent ruminations on why I alone can’t seem to hack it beyond a certain level of business development, and even making some abortive attempts to mimic the declared customs and habits of people who could. Since then, I’ve found general agreement among bootstrapped business founders that it’s integral to one’s mental health to tune this stream out, keep one’s head down, and focus on one’s own work.

7. Only hire the right people, and don’t be reticent to fire
Well, let me tweak that for my specific case: don’t hire entry-level people unless you’ve got a business model that is specifically set up to extract value from them.

That certainly does not describe my business. Nevertheless, I’ve had a bad predilection for hiring entry-level people. Those aren’t the only people I’ve ever hired, but it’s been a major theme. The first and most immediate reason is that entry level is mostly what I could afford. However, what really drove the decision in those cases was—if I can find a way to say it without making myself out to be some kind of saint on a mission civilisatrice—an altruistic impulse.

I’ve met people who were sincerely interested in learning more about technology and, in many cases, I perceived, rightly or wrongly, that they could have used the job. I have been idealistic over the years about my ability to introduce someone to this industry and “raise the floor” on their skill set, slowly but surely, until they can take over some routine business functions. If I’m being honest, there was probably an egotistical desire to disprove conventional hiring wisdom and demonstrate a civically minded alternative that spoke to the social purpose of employment.

However, I’m simply not set up to put that sort of candidate to use productively for reasons explained in point #1, and in this light, hiring them was ultimately a disservice to myself and to them. In addition to burning cash I simply did not have, I neglected to consider how bummed out people feel when they know they can’t be useful. Far from being lazy, most of these folks were quite motivated to do a good job, and it was no moral failing on their part that they simply didn’t have twenty years of broad-based IT experience that matched my needs. That did not change the reality; an unproductive employee is not a happy employee.

I think the most damage was done not by my choice of who to hire, but my tendency to keep them on payroll far beyond the point at which it became apparent, if tacitly, to both of us that this isn’t really going to work. I invariably blamed myself, believing it to be the responsibility of the manager or the entrepreneur to devise workflows and systems in which one could put other people to use. Earlier years were spent labouring under the delusion that given the right tools, technology, process and training, I can make anyone into a gainful contributor to the company’s work.

It is vital to be brutally honest with oneself about whether someone’s skills can realistically be put to gainful work. Do not allow emotions or generous impulses to override that. Big companies average together the productivity of lots of different people, and can afford a relatively unproductive team member. As a small, bootstrapped company, not only can you not do that, but to achieve any sort of “escape velocity”, your first few team members have to be exceptionally productive. Otherwise, the result will be that you will work three times as hard as you already do to keep the lights on and make sure everyone’s salaries are paid, while your employees feel useless and dejected. This is one I seem to have had to learn over and over.

Finally, letting someone go is one of the life’s least pleasant sensations. I have a pathological aversion to it, because my inner narrative about any given employment situation that’s not working out is that I have somehow failed the employee. Nevertheless, if you’ve made a bad choice, stopping your bleeding—and theirs—is an absolutely essential facility to develop as a bootstrapped entrepreneur. You really, quite literally cannot afford not to, and by not doing it, you’re leading the employee on and denying them the opportunity to move on to a more fulfilling role with better prospects for themselves.

Finally
There is a more global reflection that haunts me the most. I saved it as a bonus for last, because it’s intimately related to the conditions of “moderate success” as laid out in the introduction.

Let me start by saying that I don’t subscribe to California startup capitalism and its “go big or go home” philosophy of business, and neither to the pejorative distinction its adherents draw between “real business” and “lifestyle business”. I don’t think a small, specialised company with a small team is a worthless aspiration—it’s not a failure of $100M imagination.

I also don’t advocate byzantine, metrics-laden strategy at micro scale. There is such a thing as simply too small.

Nevertheless, the cold, hard truth is that  “moderate success” is a vast chasm that is difficult to cross. Unless you explicitly declare bankruptcy or wind down the company, nobody comes along to tell you that you’ve failed and shutter you. If you’re doing service work such as consulting in particular, you can tread water and still pay the bills almost indefinitely. You need to decide where the shuttering point is for yourself.

I’m not suggesting you should aim for Mars, nor that this shuttering point is a static quantity. It will probably need to be calibrated to the market feedback you receive and your sense of the overall prospectus. Nevertheless, it is helpful to start with some idea of where you want to be after some period of time that is more specific than “uhhh, grow?”

I’ve got my shuttering point. Fortunately, I am above it. Nevertheless, my focus on the prize over these ten years would have been sharper if I had started out with a notion of what the prize is.

What does it all mean? Should all of this discourage you from going into business for yourself on a self-funded basis, or from doing consulting work? Absolutely not! If you’re studying that option, hopefully this article has taught you something about the obstacles you will face and help you to plot your master plan in a more pragmatic way. It’s far too easy to fall under the spell of “success porn”, which is the dominant packaging of information out there for the aspiring self-employed. The only comme il faut narrative forms out there seem to be 1) “make it” or 2) “fake it till you make it”, and my aim was to shed some light on what “only kind of making it” looks like, which seems to me to be the vast middle of the bell curve. That is to say, unless you achieve meteoric, hockey-stick break-out success or you straight-up fail, I think you’re probably going to end up dealing with many of the same problems I’ve encountered.

The good news is that these problems are not insurmountable. They’re just a lot easier to surmount if you don’t spend a long time discovering them for yourself. Why play life on hard mode if you don’t have to?

Many thanks to my good friends and fellow entrepreneurs Fred Posner and Kelly Storm for their feedback on drafts of this article.

Share this:
TwitterFacebook89Google

Related
Too cool for school: a retrospective on dropping out of university
In "Business"
In Response to the Cult of Remote Working
In "Business"
The Hacker News playbook and enterprise software startups
In "Business"
14 Comments on “Seven tough lessons from ten years in bootstrapped business”
Kelly Storm December 2, 2018 at 12:00 am
Section 3, third to last paragraph, “[…] a process not altogether reliable even in those cases.”, is arguably the heaviest, hardest hitting, most profound statement in the article.

When you allow the statement to change your perspective or modify your understanding of consulting in this and neighboring realms (not consulting, mind you, but tech consulting specifically), you will finally begin to see someone like you, someone like me, as a person trying to make their way in the world, as a human being within a vehicle not unlike every other on the road right now.

The divide between two individuals or initiatives that is drawn merely by inserting ‘technology’ before ‘consulting’ is staggeringly wide, and leaping over, building a bridge, addressing the divide itself, may very well be impossible to do, may very well never occur and this chasm will forever remain despite our efforts and best attempts…

If it is, however, that sentence will unquestionably be one of the tools used to close it.

I demand that you write more on this topic. Thanks in advance.

Liked by 1 person

Reply
New top story on Hacker News: Seven tough lessons from ten years in bootstrapped business – News about world December 2, 2018 at 11:14 pm
[…] Seven tough lessons from ten years in bootstrapped business 13 by kimi | 0 comments on Hacker News. […]

Like

Reply
New top story on Hacker News: Seven tough lessons from ten years in bootstrapped business – Golden News December 2, 2018 at 11:14 pm
[…] Seven tough lessons from ten years in bootstrapped business 13 by kimi | 0 comments on Hacker News. […]

Like

Reply
New top story on Hacker News: Seven tough lessons from ten years in bootstrapped business | World Best News December 2, 2018 at 11:17 pm
[…] Seven tough lessons from ten years in bootstrapped business 13 by kimi | 0 comments on Hacker News. […]

Like

Reply
New top story on Hacker News: Seven tough lessons from ten years in bootstrapped business – Hckr News December 2, 2018 at 11:20 pm
[…] Seven tough lessons from ten years in bootstrapped business 13 by kimi | 0 comments on Hacker News. […]

Like

Reply
New top story on Hacker News: Seven tough lessons from ten years in bootstrapped business – Latest news December 2, 2018 at 11:29 pm
[…] Seven tough lessons from ten years in bootstrapped business 16 by kimi | 0 comments on Hacker News. […]

Like

Reply
Seven tough lessons from ten years in bootstrapped business - 近程端 December 3, 2018 at 12:13 am
[…] Source : Hacker News […]

Liked by 1 person

Reply
Seven tough lessons from ten years in bootstrapped business – Hacker News Robot December 3, 2018 at 1:44 am
[…] https://likewise.am/2018/12/01/seven-tough-lessons-from-ten-years-in-bootstrapped-business/ […]

Like

Reply
Jono December 3, 2018 at 6:19 am
Brilliant, please keep writing. Great to see unfiltered analysis.

Like

Reply
Quitting Social Media - Today in Tech - Monday, Dec 03, 2018 December 3, 2018 at 6:38 am
[…] Seven tough lessons from ten years in bootstrapped business, Alex Balashov […]

Like

Reply
Gohar December 3, 2018 at 8:08 pm
This is so much relate-able that I felt Dejavu.

Like

Reply
abalashov December 3, 2018 at 9:27 pm
I’m glad. I’ve read my share of articles that seemed to be about me.

Like

Reply
Astorian December 5, 2018 at 6:40 am
I’ll be leaving a first world country soon to go back to my first world home to start a bootstrapped business. I have saved quite a bit for the initial capital, but am well aware that it will not be enough for anything more than a couple of years.

Thanks so much for this post; it is so difficult to get advice on the internet with regards to starting a tech business which was not funded by a VC. I’ve been reading up on finance in general and am starting to understand that having cash flow is critical and not as easy as it seems. Your post drives the point home, and gives me a lot of other things to consider as well.

I am treating starting my business as an ultimate challenge of self-support more than anything else. I’m introverted and aiming for self sufficiency, so this route appeals to me. I am looking for anything which will either help me understand this new world or make me aware of what I’m up against. Your post is a gold mine.

Like

Reply
Josh December 8, 2018 at 1:58 pm
I always ask myself why I should work for a company which’s want’s a senior but pay’s for junior. When it’s all about passion I would create my own company.

Like
